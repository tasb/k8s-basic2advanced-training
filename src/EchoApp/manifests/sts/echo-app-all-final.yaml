kind: Namespace
apiVersion: v1
metadata:
  name: echo-app-ns

---

apiVersion: v1
kind: Service
metadata:
  name: echo-api-svc
  namespace: echo-app-ns
spec:
  ports:
    - port: 8080
      targetPort: 80
      name: api
  selector:
    app: echo-app
    tier: back
  type: ClusterIP

---

apiVersion: v1
kind: Service
metadata:
  name: echo-webapp-svc
  namespace: echo-app-ns
spec:
  ports:
    - port: 9000
      targetPort: 80
      name: web
  selector:
    app: echo-app
    tier: front
  type: ClusterIP

---

apiVersion: v1
kind: Secret
metadata:
  name: echo-api-db-secret
  namespace: echo-app-ns
data:
  dbpass: UEBzc3cwcmQ=
  connString: U2VydmVyPWVjaG8tZGItc3RzLTAuZWNoby1kYi1zdHMtc3ZjLmVjaG8tYXBwLW5zLnN2Yy5jbHVzdGVyLmxvY2FsLDE0MzM7SW5pdGlhbCBDYXRhbG9nPWVjaG8tbG9nO1VzZXIgSUQ9U0E7UGFzc3dvcmQ9UEBzc3cwcmQK

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: echo-app-cfg
  namespace: echo-app-ns
data:
  echo-api-server: echo-api-svc:8080

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: echo-db-sts
  namespace: echo-app-ns
spec:
  selector:
    matchLabels:
      app: echo-app
      tier: db
  serviceName: "echo-db-sts-svc"
  replicas: 1
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  template:
    metadata:
      labels:
        app: echo-app
        tier: db
    spec:
      containers:
      - name: echo-db
        image: mcr.microsoft.com/mssql/server:2017-latest
        ports:
        - containerPort: 1433
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: echo-api-db-secret
              key: dbpass
        volumeMounts:
        - name: echo-app-db-pv-claim
          mountPath: /var/opt/mssql/data
  volumeClaimTemplates:
  - metadata:
      name: echo-app-db-pv-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi


---

apiVersion: v1
kind: Service
metadata:
  name: echo-db-sts-svc
  namespace: echo-app-ns
spec:
  ports:
    - port: 1433
      targetPort: 1433
      name: db
  selector:
    app: echo-app
    tier: db
  clusterIP: None

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-api-dep
  namespace: echo-app-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      app: echo-app
      tier: back
  template:
    metadata:
      labels:
        app: echo-app
        tier: back
    spec:
      containers:
      - name: echo-api
        image: tasb/echo-api:k8s-v2
        ports:
        - containerPort: 80
        env:
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: echo-api-db-secret
              key: connString

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-webapp-dep
  namespace: echo-app-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-app
      tier: front
  template:
    metadata:
      labels:
        app: echo-app
        tier: front
    spec:
      containers:
      - name: echo-webapp
        image: tasb/echo-webapp:k8s-v2
        ports:
        - containerPort: 80
        env:
        - name: EchoAPIServer
          valueFrom:
            configMapKeyRef:
              name: echo-app-cfg
              key: echo-api-server

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-app-ingress
  namespace: echo-app-ns
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
  - host: echo-app.ingress.test
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: echo-webapp-svc
            port:
              number: 9000
      - path: /api/(.*)
        pathType: Prefix
        backend:
          service:
            name: echo-api-svc
            port:
              number: 8080

